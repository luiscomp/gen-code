<template>
    <div id="app">
        <v-app id="inspire">
            <v-navigation-drawer fixed app permanent :mini-variant="drawer" width="240">
                <v-img :aspect-ratio="16/9" style="min-height: 64px">
                    <img :src="require('./imagens/banner.svg')" style="width: 100%; min-height: 64px">
                </v-img>

                <v-list dense>
                    <template v-for="(item, i) in items">
                        <v-layout row v-if="item.heading" align-center :key="item.heading">
                            <v-flex xs6>
                                <v-subheader v-if="item.heading">
                                    {{ item.heading }}
                                </v-subheader>
                            </v-flex>

                            <v-flex xs6 class="text-xs-right">
                                <v-btn small flat>edit</v-btn>
                            </v-flex>
                        </v-layout>

                        <v-divider v-else-if="item.divider" :key="i"></v-divider>

                        <v-subheader v-else-if="item.subheader" :key="i" class="mt-3 grey--text text--darken-1">{{ item.subheader }}</v-subheader>

                        <v-list-group v-else-if="item.children" v-model="item.model" :key="item.text" :prepend-icon="item.icon" append-icon="keyboard_arrow_down">
                            <v-list-tile slot="activator">
                                <v-list-tile-content>
                                    <v-list-tile-title>
                                        {{ item.text }}
                                    </v-list-tile-title>
                                </v-list-tile-content>
                            </v-list-tile>

                            <v-list-tile v-for="(child, i) in item.children" :key="i" router :to="child.link" ripple>
                                <v-list-tile-action v-if="child.icon">
                                    <v-tooltip right>
                                        <v-icon slot="activator">{{ child.icon }}</v-icon>
                                        <span>{{ child.text }}</span>
                                    </v-tooltip>
                                </v-list-tile-action>

                                <v-list-tile-content>
                                    <v-list-tile-title>
                                        {{ child.text }}
                                    </v-list-tile-title>
                                </v-list-tile-content>
                            </v-list-tile>
                        </v-list-group>

                        <v-list-tile v-else :key="item.text" router :to="item.link" ripple>
                            <v-list-tile-action>
                                <v-tooltip right>
                                    <v-icon slot="activator">{{ item.icon }}</v-icon>
                                    <span>{{ item.text }}</span>
                                </v-tooltip>
                            </v-list-tile-action>

                            <v-list-tile-content>
                                <v-list-tile-title>
                                    {{ item.text }}
                                </v-list-tile-title>
                            </v-list-tile-content>
                        </v-list-tile>
                    </template>

                    <v-list-tile @click="drawer = !drawer">
                        <v-list-tile-action>
                            <v-tooltip right>
                                <v-icon slot="activator">{{ drawer ? 'chevron_right' : 'chevron_left' }}</v-icon>
                                <span>{{ drawer ? 'expandir' : 'minimizar' }}</span>
                            </v-tooltip>
                        </v-list-tile-action>
                    </v-list-tile>
                </v-list>
            </v-navigation-drawer>

            <v-toolbar color="blue darken-3" dark :flat="offsetTop === 0 ? true : false" app fixed>
                <v-toolbar-title style="margin-left: -6px">
                    <span class="white--text display-1 font-weight-thin">CRUD Vue</span>
                </v-toolbar-title>
                <v-spacer></v-spacer>
                <v-btn icon>
                    <v-icon>apps</v-icon>
                </v-btn>
                <v-btn icon>
                    <v-icon>notifications</v-icon>
                </v-btn>
                <v-btn icon large>
                    <v-avatar size="36px" tile>
                        <img src="./imagens/avatar.svg" alt="Vuetify">
                    </v-avatar>
                </v-btn>
            </v-toolbar>

            <v-content>
                <v-container fluid fill-height pa-0 ma-0>
                    <v-layout justify-space-around align-baseline v-scroll="onScroll">
                    	<v-slide-y-transition mode="out-in">
                            <router-view/>
                        </v-slide-y-transition>
                    </v-layout>
                </v-container>
            </v-content>

            <v-dialog v-model="progress.open" persistent width="300">
                <v-card color="primary" dark>
                    <v-card-text>
                        {{ progress.text }}
                        <v-progress-linear indeterminate color="white" class="mb-0"/>
                    </v-card-text>
                </v-card>
            </v-dialog>

            <v-snackbar
                v-model="snackbar.open"
                :bottom="false"
                :left="false"
                :multi-line="'multi-line'"
                :right="false"
                :timeout="snackbar.timeout"
                :top="false"
                :vertical="false"
                :color="snackbar.color">

                {{ snackbar.text }}

                <v-btn flat @click="ocultarAlert">
                    Fechar
                </v-btn>
            </v-snackbar>
        </v-app>
    </div>
</template>
<script>
import { mapState, mapActions } from 'vuex'
import Meta from 'mixins/meta'

export default {
    mixins: [Meta],

    name: 'App',
    data: () => ({
        offsetTop: 0,
        drawer: null,
        items: [
            { icon: 'dashboard', text: 'Painel', link: '/dashboard' },
            {
                icon: 'apps',
                text: 'Cadastros',
                model: true,
                children: [
#foreach($modulo in $modulos)
					{ icon: 'panorama_wide_angle', text: '${modulo.getNome()}', link: '/${modulo.getNome()}' },
#end
                ]
            },
            { divider: true },
            { icon: 'exit_to_app', text: 'Sair' },
            { divider: true }
        ]
    }),
    props: {
        source: String
    },
    computed: {
        ...mapState({
            progress: state => state.progress,
            snackbar: state => state.snackbar
        })
    },
    methods: {
        ...mapActions({
            ocultarAlert: 'ocultarAlert'
        }),
        onScroll(e) {
            this.offsetTop = window.pageYOffset || document.documentElement.scrollTop
        }
    }
}
</script>

<style>
</style>
